# SPDX-License-Identifier: MIT
name: CI

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
    paths-ignore:
    - '**.md'
    - '.gitignore'

env:
  GORELEASER_VERSION: '~> v2'
  TASK_VERSION: 3.x

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  local-build:
    name: Local build
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      id-token: write
    steps:
    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 0

    - name: Setup Go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: './go.mod'

    - name: Setup Task
      uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
      with:
        version: ${{ env.TASK_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup GoReleaser
      uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
      with:
        install-only: true

    - name: Setup cosign
      uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0

    - name: Setup container-structure-test
      run: |
        set -euo pipefail
        curl -fsSLo /usr/local/bin/container-structure-test https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
        chmod +x /usr/local/bin/container-structure-test
        container-structure-test version

    - name: Check release config
      run: |
        task goreleaser:check

    - name: Build with GoReleaser
      run: |
        task goreleaser:build

    - name: Create snapshot release
      run: |
        task goreleaser:snapshot

    - name: Build
      run: |
        task build

    - name: Test
      run: |
        task test

  release-dry-run:
    name: GoReleaser release (dry run)
    runs-on: ubuntu-24.04
    permissions:
      actions: read
      checks: write
      contents: read
      id-token: write
      security-events: write
    steps:
    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 0

    - name: Setup Go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: './go.mod'

    - name: Setup cosign
      uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0

    - name: Set environment variables
      run: |
        set -euo pipefail
        echo "SNAPSHOT_VERSION=$(./scripts/version)" >>"${GITHUB_ENV}"
        IMAGE_BASE_NAME="$(sed -nE "/^FROM/ { s/^FROM ([^:]+):([^@]+)@([^ ]+).*$/\1/; p; q; }" build/package/Dockerfile)"
        IMAGE_BASE_TAG="$(sed -nE "/^FROM/ { s/^FROM ([^:]+):([^@]+)@([^ ]+).*$/\2/; p; q; }" build/package/Dockerfile)"
        IMAGE_BASE_DIGEST="$(sed -nE "/^FROM/ { s/^FROM ([^:]+):([^@]+)@([^ ]+).*$/\3/; p; q; }" build/package/Dockerfile)"
        echo "IMAGE_BASE_NAME=${IMAGE_BASE_NAME}:${IMAGE_BASE_TAG}" >>"${GITHUB_ENV}"
        echo "IMAGE_BASE_DIGEST=${IMAGE_BASE_DIGEST}" >>"${GITHUB_ENV}"
        cat "${GITHUB_ENV}"

    - name: Check release config
      uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
      with:
        version: ${{ env.GORELEASER_VERSION }}
        args: check --config build/package/.goreleaser.yaml

    - name: Create snapshot release
      uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
      with:
        version: ${{ env.GORELEASER_VERSION }}
        args: release --config build/package/.goreleaser.yaml --snapshot --skip=publish --clean

    - name: Container structure test (distroless)
      uses: docker://gcr.io/gcp-runtimes/container-structure-test:latest@sha256:377f9a9bc00376b9fa6dc6a3a020dbe40e84ebe9481b71969aa3ff9d1c9ea17e
      with:
        args: 'test --image ghcr.io/ffurrer2/semver:latest --config test/semver_container_test.yml'

    - name: Run Trivy vulnerability scanner (distroless)
      uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
      with:
        image-ref: 'ghcr.io/ffurrer2/semver:latest'
        exit-code: '1'
        vuln-type: 'os,library'
        severity: 'HIGH,CRITICAL'
        format: 'sarif'
        output: 'trivy-results-distroless.sarif'
        github-pat: '${{ secrets.GITHUB_TOKEN }}'

    - name: Inspect Trivy SARIF report (distroless)
      run: |
        cat trivy-results-distroless.sarif
      if: ${{ !cancelled() }}

    - name: Upload Trivy scan results to GitHub Security tab (distroless)
      uses: github/codeql-action/upload-sarif@192325c86100d080feab897ff886c34abd4c83a3 # v3.30.3
      with:
        sarif_file: 'trivy-results-distroless.sarif'
        category: trivy-results-distroless
      if: ${{ !cancelled() }}

    - name: Run Anchore image scanner (distroless)
      uses: anchore/scan-action@1638637db639e0ade3258b51db49a9a137574c3e # v6.5.1
      id: anchore-distroless
      with:
        image: 'ghcr.io/ffurrer2/semver:latest'
        fail-build: true
        severity-cutoff: high
      if: ${{ !cancelled() }}

    - name: Inspect Anchore SARIF report (distroless)
      run: |
        cat ${{ steps.anchore-distroless.outputs.sarif }}
      if: ${{ !cancelled() }}

    - name: Upload Anchore scan results to GitHub Security tab (distroless)
      uses: github/codeql-action/upload-sarif@192325c86100d080feab897ff886c34abd4c83a3 # v3.30.3
      with:
        sarif_file: ${{ steps.anchore-distroless.outputs.sarif }}
      if: ${{ !cancelled() }}
