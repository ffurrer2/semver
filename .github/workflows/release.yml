# SPDX-License-Identifier: MIT
name: Release

on:
  push:
    tags:
    - 'v*.*.*'

env:
  GORELEASER_VERSION: 2.3.2
  REGISTRY: ghcr.io

jobs:
  release:
    name: Create release
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: './go.mod'

    - name: Set environment variables
      run: |
        set -euo pipefail
        IMAGE_BASE_NAME_DISTROLESS="$(sed -n "s/^FROM \(.*\)/\1/p" build/package/Dockerfile | tail -n 1)"
        echo "IMAGE_BASE_NAME_DISTROLESS=${IMAGE_BASE_NAME_DISTROLESS}" >>"${GITHUB_ENV}"
        echo "IMAGE_BASE_DIGEST_DISTROLESS=$(docker pull "${IMAGE_BASE_NAME_DISTROLESS}" | sed -n "s/^Digest: \(.*\)$/\1/p")" >>"${GITHUB_ENV}"

    - name: Create release notes file
      uses: ffurrer2/extract-release-notes@v2
      with:
        release_notes_file: ${{ runner.temp }}/RELEASE_NOTES.md

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: GoReleaser
      uses: goreleaser/goreleaser-action@v6
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        version: v${{ env.GORELEASER_VERSION }}
        args: release --config build/package/.goreleaser.yaml --release-notes=${{ runner.temp }}/RELEASE_NOTES.md
