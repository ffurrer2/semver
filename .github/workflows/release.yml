# SPDX-License-Identifier: MIT
name: Release

on:
  push:
    tags:
    - 'v*.*.*'

env:
  GORELEASER_VERSION: '~> v2'
  REGISTRY: ghcr.io

jobs:
  release:
    name: Create release
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - name: Setup Go
      uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
      with:
        go-version-file: './go.mod'

    - name: Set environment variables
      run: |
        set -euo pipefail
        IMAGE_BASE_NAME="$(sed -nE "/^FROM/ { s/^FROM ([^:]+):([^@]+)@([^ ]+).*$/\1/; p; q; }" build/package/Dockerfile)"
        IMAGE_BASE_TAG="$(sed -nE "/^FROM/ { s/^FROM ([^:]+):([^@]+)@([^ ]+).*$/\2/; p; q; }" build/package/Dockerfile)"
        IMAGE_BASE_DIGEST="$(sed -nE "/^FROM/ { s/^FROM ([^:]+):([^@]+)@([^ ]+).*$/\3/; p; q; }" build/package/Dockerfile)"
        echo "IMAGE_BASE_NAME=${IMAGE_BASE_NAME}:${IMAGE_BASE_TAG}" >>"${GITHUB_ENV}"
        echo "IMAGE_BASE_DIGEST=${IMAGE_BASE_DIGEST}" >>"${GITHUB_ENV}"

    - name: Create release notes file
      uses: ffurrer2/extract-release-notes@9989ccec43d726ef05aa1cd7b2854fb96b6df6ab # v2.2.0
      with:
        release_notes_file: ${{ runner.temp }}/RELEASE_NOTES.md

    - name: Login to Docker Hub
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: GoReleaser
      uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6.2.1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        version: ${{ env.GORELEASER_VERSION }}
        args: release --config build/package/.goreleaser.yaml --release-notes=${{ runner.temp }}/RELEASE_NOTES.md
