# SPDX-License-Identifier: MIT
project_name: semver

env:
- GO111MODULE=on

release:
  github:
    owner: ffurrer2
    name: semver
  draft: false
  prerelease: auto
  name_template: '{{.Tag}}'
  footer: |
    ## Docker images

    - `docker pull docker.io/ffurrer/semver:{{ .Major }}.{{ .Minor }}.{{ .Patch }}`
    - `docker pull docker.io/ffurrer/semver:{{ .Major }}.{{ .Minor }}`
    - `docker pull docker.io/ffurrer/semver:{{ .Major }}`
    - `docker pull docker.io/ffurrer/semver:latest`
    - `docker pull docker.io/ffurrer/semver:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-alpine`
    - `docker pull docker.io/ffurrer/semver:{{ .Major }}.{{ .Minor }}-alpine`
    - `docker pull docker.io/ffurrer/semver:{{ .Major }}-alpine`
    - `docker pull docker.io/ffurrer/semver:alpine`

brews:
- name: semver
  tap:
    owner: ffurrer2
    name: homebrew-tap
    branch: main
  commit_author:
    name: goreleaserbot
    email: ffurrer2@users.noreply.github.com
  folder: Formula
  install: |
    bin.install "semver"
  test: |
    system "#{bin}/semver version"
  description: A semantic versioning command line utility written in Go.
  homepage: https://github.com/ffurrer2/semver
  license: MIT
  ids:
  - semver
  goarm: '6'

scoop:
  name: semver
  bucket:
    owner: ffurrer2
    name: scoop-bucket
  commit_author:
    name: goreleaserbot
    email: ffurrer2@users.noreply.github.com
  commit_msg_template: Scoop update for {{ .ProjectName }} version {{ .Tag }}
  homepage: https://github.com/ffurrer2/semver
  description: A semantic versioning command line utility written in Go.
  license: MIT

builds:
- id: semver
  goos:
  - darwin
  - linux
  - windows
  goarch:
  - '386'
  - amd64
  - arm64
  goarm:
  - '6'
  ignore:
  - goos: darwin
    goarch: '386'
  - goos: windows
    goarch: arm64
  dir: .
  main: ./cmd/semver
  ldflags:
  - -X github.com/ffurrer2/semver/internal/pkg/app.version={{.Version}} -X github.com/ffurrer2/semver/internal/pkg/app.commit={{.Commit}} -X github.com/ffurrer2/semver/internal/pkg/app.date={{.Date}} -s -w
  flags:
  - -mod=readonly
  - -v
  binary: semver
  env:
  - CGO_ENABLED=0
  builder: go
  gobinary: go

archives:
- id: semver
  builds:
  - semver
  name_template: '{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}'
  format: tar.gz
  format_overrides:
  - goos: windows
    format: zip
  files:
  - src: CHANGELOG.md
  - src: LICENSE
  - src: README.md

snapshot:
  name_template: '{{.Env.SNAPSHOT_VERSION}}'

checksum:
  name_template: '{{ .ProjectName }}_checksums.txt'
  algorithm: sha256

dockers:
- ids:
  - semver
  goos: linux
  goarch: amd64
  dockerfile: build/package/Dockerfile
  image_templates:
  - docker.io/ffurrer/semver:{{if .IsSnapshot}}{{replace .Env.SNAPSHOT_VERSION "+" "-"}}{{else}}{{ .Major }}.{{ .Minor }}.{{ .Patch }}{{end}}
  - docker.io/ffurrer/semver:{{if .IsSnapshot}}{{replace .Env.SNAPSHOT_VERSION "+" "-"}}{{else}}{{ .Major }}{{end}}
  - docker.io/ffurrer/semver:{{if .IsSnapshot}}{{replace .Env.SNAPSHOT_VERSION "+" "-"}}{{else}}{{ .Major }}.{{ .Minor }}{{end}}
  - docker.io/ffurrer/semver:latest
  skip_push: 'false'
  build_flag_templates:
  - --pull
  - --build-arg=BUILD_DATE={{ .Date }}
  - --build-arg=GIT_SHA={{ .FullCommit }}
  - --build-arg=BUILD_VERSION={{ .Version }}
  use: docker
- ids:
  - semver
  goos: linux
  goarch: amd64
  dockerfile: build/package/Dockerfile.alpine
  image_templates:
  - docker.io/ffurrer/semver:{{if .IsSnapshot}}{{replace .Env.SNAPSHOT_VERSION "+" "-"}}{{else}}{{ .Major }}.{{ .Minor }}.{{ .Patch }}{{end}}-alpine
  - docker.io/ffurrer/semver:{{if .IsSnapshot}}{{replace .Env.SNAPSHOT_VERSION "+" "-"}}{{else}}{{ .Major }}.{{ .Minor }}{{end}}-alpine
  - docker.io/ffurrer/semver:{{if .IsSnapshot}}{{replace .Env.SNAPSHOT_VERSION "+" "-"}}{{else}}{{ .Major }}{{end}}-alpine
  - docker.io/ffurrer/semver:alpine
  skip_push: 'false'
  build_flag_templates:
  - --pull
  - --build-arg=BUILD_DATE={{ .Date }}
  - --build-arg=GIT_SHA={{ .FullCommit }}
  - --build-arg=BUILD_VERSION={{ .Version }}
  use: docker

changelog:
  skip: false

dist: artifacts/dist

before:
  hooks:
  - go mod verify
  - go mod tidy
  - go generate ./...
  - go test -v -mod readonly ./...

source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz

gomod:
  gobinary: go
