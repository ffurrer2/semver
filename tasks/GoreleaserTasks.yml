# SPDX-License-Identifier: MIT
# https://taskfile.dev
version: '3'

tasks:
  check:
    desc: Check GoReleaser configuration
    cmds:
    - goreleaser check --config build/package/.goreleaser.yaml
    silent: true

  build:
    desc: Build with GoReleaser
    env:
      SNAPSHOT_VERSION: '{{.BUILD_VERSION}}'
    cmds:
    - goreleaser build --config build/package/.goreleaser.yaml --clean --single-target --snapshot
    silent: true

  snapshot:
    desc: Create snapshot release with GoReleaser
    vars:
      IMAGE_BASE_NAME: {sh: 'sed -nE "/^FROM/ { s/^FROM ([^:]+):([^@]+)@([^ ]+).*$/\1/; p; q; }" build/package/Dockerfile'}
      IMAGE_BASE_TAG: {sh: 'sed -nE "/^FROM/ { s/^FROM ([^:]+):([^@]+)@([^ ]+).*$/\2/; p; q; }" build/package/Dockerfile'}
      IMAGE_BASE_DIGEST: {sh: 'sed -nE "/^FROM/ { s/^FROM ([^:]+):([^@]+)@([^ ]+).*$/\3/; p; q; }" build/package/Dockerfile'}
    env:
      SNAPSHOT_VERSION: '{{.BUILD_VERSION}}'
      IMAGE_BASE_NAME: '{{.IMAGE_BASE_NAME}}:{{.IMAGE_BASE_TAG}}'
      IMAGE_BASE_DIGEST: '{{.IMAGE_BASE_DIGEST}}'
    cmds:
    - docker context use default
    - goreleaser release --config build/package/.goreleaser.yaml --clean --skip sign --snapshot
    silent: true

  release-dry-run:
    desc: Create release with GoReleaser without publishing artifacts
    vars:
      IMAGE_BASE_NAME: {sh: 'sed -nE "/^FROM/ { s/^FROM ([^:]+):([^@]+)@([^ ]+).*$/\1/; p; q; }" build/package/Dockerfile'}
      IMAGE_BASE_DIGEST: {sh: 'sed -nE "/^FROM/ { s/^FROM ([^:]+):([^@]+)@([^ ]+).*$/\3/; p; q; }" build/package/Dockerfile'}
    env:
      IMAGE_BASE_NAME: '{{.IMAGE_BASE_NAME}}:{{.IMAGE_BASE_TAG}}'
      IMAGE_BASE_DIGEST: '{{.IMAGE_BASE_DIGEST}}'
    cmds:
    - docker context use default
    - goreleaser release --config build/package/.goreleaser.yaml --clean --skip publish
    silent: true
