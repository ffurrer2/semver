# SPDX-License-Identifier: MIT
# https://taskfile.dev
version: '3'

includes:
  dockle: ./tasks/DockleTasks.yml
  git: ./tasks/GitTasks.yml
  go: ./tasks/GoTasks.yml
  golangci: ./tasks/GolangciLintTasks.yml
  goreleaser: ./tasks/GoreleaserTasks.yml
  hadolint: ./tasks/HadolintTasks.yml
  markdownlint: ./tasks/MarkdownlintTasks.yml
  misc: ./tasks/MiscTasks.yml
  shiftleft: ./tasks/ShiftleftTasks.yml
  trivy: ./tasks/TrivyTasks.yml
  yamllint: ./tasks/YamllintTasks.yml

vars:
  PROJECT_NAME: semver
  PROJECT_OWNER: ffurrer2
  BUILD_VERSION: { sh: bash ./scripts/version.sh }
  BUILD_VERSION_SHORT: { sh: bash ./scripts/version.sh --short }
  BUILD_DATE: '1970-01-01T00:00:00Z'
  GIT_BRANCH: { sh: bash ./scripts/branch.sh }
  GIT_SHA: { sh: git rev-parse HEAD }
  GIT_SHA_SHORT: { sh: git rev-parse --short HEAD }

tasks:
  default:
    cmds:
    - task --list
    silent: true

  clean:
    desc: Delete build artifacts
    cmds:
    - task: go:clean
    silent: true

  build:
    desc: Build {{.PROJECT_NAME}}
    cmds:
    - task: go:build
    silent: true

  test:
    desc: Test {{.PROJECT_NAME}}
    cmds:
    - task: go:test
    silent: true

  lint:
    desc: Run all linters
    cmds:
    - task: dockle:lint
      vars:
        IMAGE_NAME: 'ffurrer/semver:alpine'
    - task: golangci:lint
    - task: lint:hadolint
      vars:
        IMAGE_NAME: 'build/package/Dockerfile'
    - task: lint:hadolint
      vars:
        IMAGE_NAME: 'build/package/Dockerfile.alpine'
    - task: lint:markdownlint
    - task: lint:yamllint
    silent: true

  scan:
    desc: Run image scans
    cmds:
    - task: dockle:lint
      vars:
        IMAGE_NAME: 'ffurrer/semver:latest'
    - task: dockle:lint
      vars:
        IMAGE_NAME: 'ffurrer/semver:alpine'
    - task: golangci:lint
    - task: trivy:image
      vars:
        IMAGE_NAME: 'ffurrer/semver:latest'
    - task: trivy:image
      vars:
        IMAGE_NAME: 'ffurrer/semver:alpine'
    silent: true

  fmt:
    desc: Format code
    cmds:
    - task: go:gofumpt
    silent: true
